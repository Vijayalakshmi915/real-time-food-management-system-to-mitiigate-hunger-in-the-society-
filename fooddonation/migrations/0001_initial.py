# Generated by Django 4.1.3 on 2022-11-11 09:51

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Donate',
            fields=[
                ('Id', models.IntegerField(primary_key=True, serialize=False)),
                ('username', models.CharField(blank=True, max_length=100, null=True)),
                ('orphanageMobileNo', models.CharField(blank=True, max_length=100, null=True)),
                ('orphanageMail', models.CharField(blank=True, max_length=100, null=True)),
                ('orphanageLocation', models.CharField(blank=True, max_length=100, null=True)),
                ('orphanageDescription', models.CharField(blank=True, max_length=100, null=True)),
                ('adminMobileNo', models.CharField(blank=True, max_length=100, null=True)),
                ('adminMail', models.CharField(blank=True, max_length=100, null=True)),
                ('restaurantMobileNo', models.CharField(blank=True, max_length=100, null=True)),
                ('restaurantMail', models.CharField(blank=True, max_length=100, null=True)),
                ('available_date', models.DateField(blank=True, null=True)),
                ('restaurantLocation', models.CharField(blank=True, max_length=100, null=True)),
                ('restaurantFoodDescription', models.CharField(blank=True, max_length=100, null=True)),
                ('restaurantQuantity', models.CharField(blank=True, max_length=100, null=True)),
                ('peopleMobileNo', models.CharField(blank=True, max_length=100, null=True)),
                ('peopleMail', models.CharField(blank=True, max_length=100, null=True)),
                ('peopleLocation', models.CharField(blank=True, max_length=100, null=True)),
                ('peopleFoodDescription', models.CharField(blank=True, max_length=100, null=True)),
                ('peopleQuantity', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('userId', models.CharField(max_length=300)),
                ('email', models.EmailField(max_length=5000, unique=True)),
                ('mobNo', models.CharField(max_length=13)),
                ('address', models.TextField(max_length=2000)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(null=True)),
                ('is_superadmin', models.BooleanField(default=False, verbose_name='is superadmin')),
                ('is_admin', models.BooleanField(default=False, verbose_name='is admin')),
                ('is_restaurant', models.BooleanField(default=False, verbose_name='is restaurant')),
                ('is_orphanage', models.BooleanField(default=False, verbose_name='is orphanage')),
                ('is_people', models.BooleanField(default=False, verbose_name='is people')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
